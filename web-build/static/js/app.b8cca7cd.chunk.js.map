{"version":3,"sources":["components/header.js","components/inputbar.js","components/logitem.js","firebase.js","screens/LoginScreen.js","screens/HomeScreen.js","App.js"],"names":["styles","StyleSheet","create","header","height","alignItems","justifyContent","title","color","fontSize","fontWeight","textTransform","Header","props","View","style","Text","inputContainer","flexDirection","shadowOffset","width","shadowColor","shadowOpacity","input","backgroundColor","flex","addButton","addButtonText","logItem","this","TouchableOpacity","supervisorApproval","entry","Button","onPress","removeLog","React","Component","borderBottomColor","borderBottomWidth","paddingLeft","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","LoginScreen","useState","email","setEmail","password","setPassword","navigation","useNavigation","useEffect","onAuthStateChanged","user","replace","KeyboardAvoidingView","container","behavior","Image","source","uri","TextInput","placeholder","value","onChangeText","text","secureTextEntry","buttonContainer","signInWithEmailAndPassword","then","userCredentials","console","log","catch","error","alert","message","button","createUserWithEmailAndPassword","className","paddingHorizontal","paddingVertical","borderRadius","marginTop","buttonText","buttonOutline","borderColor","borderWidth","buttonOutlineText","HomeScreen","logs","setLogs","userId","currentUser","uid","activity","Day","locations","Week","form","setForm","popupActive","setPopupActive","logsCollectionRef","collection","onSnapshot","snapshot","docs","map","doc","id","viewing","data","handleSubmit","e","preventDefault","addDoc","Navbar","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","onClick","signOut","Form","onSubmit","Group","Label","Control","onChange","target","activities","i","activityClone","handleActivity","location","locationClone","handleLocation","CardGroup","filter","Card","Title","dangerouslySetInnerHTML","__html","Body","ButtonGroup","logsClone","forEach","handleView","deleteDoc","Stack","createNativeStackNavigator","App","state","logbookInput","logbook","date","unshift","length","setState","item","lb","Platform","OS","statusbar","NavigationContainer","Navigator","Screen","options","headerShown","name","component"],"mappings":"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","file":"static/js/app.b8cca7cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\n//Header function that will be rendered in App.js\r\nconst Header = (props) => {\r\n    return (\r\n        <View style={styles.header}>\r\n            <Text style={styles.title}>{props.title}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\n//Stylesheet specifications\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        height: 60,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    title: {\r\n        color: 'grey',\r\n        fontSize: 28,\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase'\r\n\r\n    }\r\n\r\n});\r\n\r\n//exports the Header fuction to App.js\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\nimport { inOut } from 'react-native/Libraries/Animated/Easing';\r\n\r\n//input bar function that will be rendered in App.js\r\nconst InputBar = props => {\r\n    return (\r\n        <View style={StyleSheet.inputContainer}>\r\n            <TextInput style={StyleSheet.input} onChangeText={logBookInput => props.textChange(logBookInput)} value={props.logBookInput} />\r\n            <TouchableOpacity style={styles.addButton} onPress={props.addNewLog}><Text style={styles.addButtonText}>ADD</Text></TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\n//Stylesheet specifications\r\nconst styles = StyleSheet.create({\r\n    inputContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        shadowOffset: { width: 0, height: 3 },\r\n        shadowColor: '#171717',\r\n        shadowOpacity: .1\r\n    },\r\n    input: {\r\n        backgroundColor: '#f3f3f3',\r\n        flex: 1,\r\n        fontSize: 18,\r\n        height: 35\r\n    },\r\n    addButton: {\r\n        width: 100,\r\n        backgroundColor: '#ffce00',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    addButtonText: {\r\n        color: '#171717',\r\n        fontSize: 18,\r\n        fontWeight: '700'\r\n    }\r\n})\r\n\r\n//exports the InputBar fuction\r\nexport default InputBar;\r\n\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, Button, TouchableOpacity } from \"react-native-web\";\r\n\r\nexport default class LogItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const logItem = this.props.logItem;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                style={styles.logItem}\r\n            >\r\n                <Text style={(logItem.supervisorApproval) ? { color: '#AAAAAA' } : { color: '#313131' }}>\r\n                    {logItem.entry}\r\n                </Text>\r\n\r\n                <Button\r\n                    title=\"Remove\"\r\n                    color={(logItem.supervisorApproval) ? 'rgba(200, 0, 0, 0.5)' : 'rgba(200, 0, 0, 1)'}\r\n                    onPress={() => this.props.removeLog()}\r\n                />\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    logItem: {\r\n        width: '100%',\r\n        height: 40,\r\n        borderBottomColor: '#DDD',\r\n        borderBottomWidth: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingLeft: 15\r\n    }\r\n})","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\"\r\nimport { getAuth } from \"firebase/auth\"\r\nimport { getFirestore } from \"firebase/firestore\"\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCLR8XlGiAJAMIxCEKh144Uso849fUv1uk\",\r\n  authDomain: \"siwesapp-99c10.firebaseapp.com\",\r\n  projectId: \"siwesapp-99c10\",\r\n  storageBucket: \"siwesapp-99c10.appspot.com\",\r\n  messagingSenderId: \"854600264735\",\r\n  appId: \"1:854600264735:web:81e96d486daee00e7b392a\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\nconst db = getFirestore(app)\r\n\r\nexport { auth, db }","import { useNavigation } from '@react-navigation/native'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth'\r\nimport { StyleSheet, Text, View, KeyboardAvoidingView, TextInput, TouchableOpacity, Image } from 'react-native'\r\nimport { auth } from '../firebase'\r\nimport Header from '../components/header';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const navigation =useNavigation()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        navigation.replace(\"Home\")\r\n      }\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const handleSignUp = () => {\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.log('Registered in with: ',user.email);\r\n      })\r\n      .catch(error => alert(error.message))\r\n  }\r\n\r\n  const handleLogin = () => {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.log('Logged in with: ',user.email);\r\n      })\r\n      .catch(error => alert(error.message))\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      behavior=\"padding\">\r\n\r\n        <View>\r\n                  <Image\r\n                    style= {{width:250, height: 250}}\r\n                    source={{uri: 'https://yt3.ggpht.com/a/AGF-l79SeAEqp4CvG_EAONZnGRfG0eK_W_Iopwgb1Q=s900-c-k-c0xffffffff-no-rj-mo'}}\r\n                  />\r\n        </View>\r\n        <Header title='DIGITAL LOGBOOK'/>\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChangeText={text => setEmail(text)}\r\n            style={styles.input} />\r\n          <TextInput\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChangeText={text => setPassword(text)}\r\n            style={styles.input}\r\n            secureTextEntry />\r\n        </View>\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity onPress={handleLogin} style={styles.button}>\r\n            <Button>\r\n              Login\r\n            </Button>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={handleSignUp}>\r\n            <Button className='mt-3'>\r\n              Register\r\n            </Button>\r\n          </TouchableOpacity>\r\n        </View>\r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  inputContainer: {\r\n    width: '80%',\r\n  },\r\n  input: {\r\n    backgroundColor: 'white',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 10,\r\n    borderRadius: 10,\r\n    marginTop: 5,\r\n  },\r\n  buttonContainer: {\r\n    width: '60%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 40,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n  },\r\n  buttonOutline: {\r\n    backgroundColor: 'white',\r\n    marginTop: 5,\r\n    borderColor: '#0782F9',\r\n    borderWidth: 2,\r\n\r\n  },\r\n  buttonOutlineText: {\r\n    color: '#0782F9',\r\n    fontWeight: '700',\r\n    fontSize: 16, \r\n  },\r\n})","import { StyleSheet, Text, View, TouchableOpacity, TextInput } from 'react-native'\r\nimport React from 'react'\r\nimport { auth, db } from '../firebase'\r\nimport { useState, useEffect } from 'react'\r\nimport { NavigationContainer, useNavigation } from '@react-navigation/native'\r\nimport { collection, onSnapshot, doc, addDoc, deleteDoc } from \"firebase/firestore\"\r\nimport Header from '../components/header'\r\nimport { Button, ButtonGroup, Card, CardGroup, Container, Form } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal } from 'bootstrap'\r\nimport { Navbar } from 'react-bootstrap'\r\n\r\n\r\nconst HomeScreen = () => {\r\n\r\n    const navigation = useNavigation()\r\n\r\n    const handleSignOut = () => {\r\n        auth\r\n            .signOut()\r\n            .then(() => {\r\n                navigation.replace(\"Login\")\r\n            })\r\n            .catch(error => alert(error.message))\r\n    }\r\n\r\n    const [logs, setLogs] = useState([])\r\n    const [form, setForm] = useState({\r\n        userId: auth.currentUser.uid,\r\n        activity: [\"\"],\r\n        Day: \"\",\r\n        locations: [\"\"],\r\n        Week: \"\"\r\n\r\n    })\r\n\r\n    const [popupActive, setPopupActive] = useState(false)\r\n\r\n    const logsCollectionRef = collection(db, \"logs\")\r\n\r\n    useEffect(() => {\r\n        onSnapshot(logsCollectionRef, snapshot => {\r\n            setLogs(snapshot.docs.map(doc => {\r\n                return {\r\n                    id: doc.id,\r\n                    viewing: false,\r\n                    ...doc.data()\r\n                }\r\n            }))\r\n        })\r\n    }, [])\r\n\r\n    const handleView = id => {\r\n        const logsClone = [...logs]\r\n\r\n        logsClone.forEach(log => {\r\n            if (log.id === id) {\r\n                log.viewing = !log.viewing\r\n            } else {\r\n                log.viewing = false\r\n            }\r\n        })\r\n\r\n        setLogs(logsClone)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (\r\n            !form.Week || !form.Day || !form.activity || !form.locations\r\n        ) {\r\n            alert(\"Please fill out all fields\")\r\n            return\r\n        }\r\n\r\n        addDoc(logsCollectionRef, form)\r\n        \r\n        setForm({\r\n            activity: [\"\"],\r\n            Day: \"\",\r\n            locations: [\"\"],\r\n            Week: \"\"\r\n        })\r\n    }\r\n\r\n    const handleActivity = (e, i) => {\r\n        const activityClone = [...form.activity]\r\n\r\n        activityClone[i] = e.target.value\r\n\r\n        setForm({\r\n            ...form,\r\n            activity: activityClone\r\n        })\r\n    }\r\n\r\n    const handleLocation = (e, i) => {\r\n        const locationClone = [...form.locations]\r\n\r\n        locationClone[i] = e.target.value\r\n\r\n        setForm({\r\n            ...form,\r\n            locations: locationClone\r\n        })\r\n    }\r\n\r\n    const handleActivityCount = () => {\r\n        setForm({\r\n            ...form,\r\n            activity: [...form.activity, \"\"]\r\n        })\r\n    }\r\n\r\n    const handleLocationCount = () => {\r\n        setForm({\r\n            ...form,\r\n            locations: [...form.locations, \"\"]\r\n        })\r\n    }\r\n\r\n    const removeLog = id => {\r\n        deleteDoc(doc(db, \"logs\", id))\r\n    }\r\n\r\n    const handleLog = () => {\r\n        if(logs.userId === auth.currentUser.uid){\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <View className='App'>\r\n\r\n            <View>\r\n                <Navbar className='navbar navbar-expand-lg navbar-light bg-dark mb-3'>\r\n                    <div className='container-fluid'>\r\n                        <Header title=\"My Logs\" />\r\n                        <Button className=\"btn-dark\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                            Profile\r\n                        </Button>\r\n                    </div>\r\n                </Navbar>\r\n                <div className='container-fluid d-grid justify-content-center'>\r\n                    <div className=\"collapse\" id=\"collapseExample\">\r\n                        <Navbar.Text>\r\n                            <Text>Signed in as {auth.currentUser?.email}</Text>\r\n                            <Button className='m-3 btn-danger' onClick={handleSignOut}>\r\n                                <Text>\r\n                                    Sign out\r\n                                </Text>\r\n                            </Button>\r\n                        </Navbar.Text>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <Button className='m-3 d-grid gap-2 col-6 mx-auto btn-lg' data-bs-toggle=\"collapse\" data-bs-target=\"#modalExample\" aria-expanded=\"false\" aria-controls=\"modalExample\" onClick={() => setPopupActive(!popupActive)} title=\"Add Log\"><Text>Add Log</Text></Button>\r\n                \r\n                {popupActive && <View className='collapse fade' id='modalExample'>\r\n                    <div className='container-fluid'>\r\n                        <View className='popup-inner'>\r\n                            <div className='modal-title'><Text className=''>Add a new log</Text></div>\r\n\r\n                            <Form className='container-fluid mb-3' onSubmit={handleSubmit}>\r\n\r\n                                <Form.Group>\r\n                                    <Form.Label>Week</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder='Ex. Week 1, Week 2...' value={form.Week} onChange={e => setForm({ ...form, Week: e.target.value })} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Form.Label>Day</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder='Ex. Monday Jan. 1 2020' value={form.Day} onChange={e => setForm({ ...form, Day: e.target.value })} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Form.Label className='mt-3'>Activity</Form.Label>\r\n                                    {\r\n                                        form.activity.map((activities, i) => (\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder='What did you do today?'\r\n                                                key={i}\r\n                                                value={activities}\r\n                                                onChange={e => handleActivity(e, i)} />\r\n                                        ))\r\n                                    }\r\n                                    <Button className='mt-2' type='button' onClick={handleActivityCount} title=\"Add Activity\"><Text>Add Activity</Text></Button>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Form.Label className='mt-2'>Location</Form.Label>\r\n                                    {\r\n                                        form.locations.map((location, i) => (\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder='Where did you work today?'\r\n                                                key={i}\r\n                                                value={location}\r\n                                                onChange={e => handleLocation(e, i)} />\r\n                                        ))\r\n                                    }\r\n                                    <Button className='mt-2' type='button' onClick={handleLocationCount} title=\"Add Location\"><Text>Add Location</Text></Button>\r\n                                </Form.Group>\r\n\r\n                                <div className='btn-group-vertical container-fluid mt-3 d-grid justify-content-center'>\r\n                                    <Button className='btn-primary' type='submit' onClick={handleSubmit} title=\"Submit\">\r\n                                        <Text>Submit</Text>\r\n                                    </Button>\r\n                                    <Button className='btn-danger remove' type='button' onClick={() => setPopupActive(false)} title=\"Close\">\r\n                                        <Text>Close</Text>\r\n                                    </Button>\r\n                                </div>\r\n\r\n\r\n                            </Form>\r\n                        </View>\r\n\r\n                    </div>\r\n\r\n                </View>}\r\n\r\n                <div className='container-fluid'>\r\n                    <CardGroup className=\"row row-cols-2 m-3 p-3\">\r\n                        \r\n                        {logs.filter((log) => {\r\n                            if (log.userId === auth.currentUser.uid){\r\n                                return log;\r\n                            }\r\n                        })\r\n                        .map((log, i) => (\r\n                            <Card className=\"col\" key={log.id}>\r\n                                <Card.Title className='mt-3'>{log.Week}</Card.Title>\r\n\r\n                                <Card.Text dangerouslySetInnerHTML={{ __html: log.Day }}></Card.Text>\r\n                                {log.viewing && <Card.Body>\r\n                                    <Card.Text className='h6'>Activities</Card.Text>\r\n                                    <Card.Text>\r\n                                        {log.activity.map((activities, i) => (\r\n                                            <Card.Text key={i}>{activities}</Card.Text>\r\n                                        ))}\r\n                                    </Card.Text>\r\n                                    <Card.Text className='h6'>Locations</Card.Text>\r\n                                    <Card.Text>\r\n                                        {log.locations.map((location, i) => (\r\n                                            <Text key={i}>{location}</Text>\r\n                                        ))}\r\n                                    </Card.Text>\r\n                                </Card.Body>}\r\n\r\n                                <ButtonGroup className='btn-group-vertical'>\r\n                                    <Button className='d-grid gap-2 col-6 mx-auto' onClick={() => handleView(log.id)} title=\"View\"><Text>View {log.viewing ? 'less' : 'more'}</Text></Button>\r\n                                    <Button className='remove d-grid gap-2 col-6 mx-auto btn-danger mb-4' onClick={() => removeLog(log.id)} title=\"Delete\"><Text>Delete</Text></Button>\r\n                                </ButtonGroup>\r\n\r\n                            </Card>\r\n                        ))}\r\n                    </CardGroup>\r\n\r\n                </div >\r\n\r\n            </View>\r\n\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nexport default HomeScreen","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Platform, StyleSheet, Text, View, FlatList, Image} from 'react-native';\nimport Header from './components/header';\nimport InputBar from './components/inputbar';\nimport LogItem from './components/logitem';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from './screens/LoginScreen'\nimport HomeScreen from './screens/HomeScreen'\n\nconst Stack = createNativeStackNavigator();\n\n//creates the App class\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      logbookInput: '', //Input to the logbook\n      logbook: [  //An array of log objects\n        {\n          id: 0,\n          date: '',\n          entry: 'Have an apple',\n          supervisorApproval: false\n        }\n\n      ] //entryObjects\n\n    }\n  }\n  //add log to the logbook array\n  addNewLog() {\n    let logbook = this.state.logbook;\n    if (this.state.logbookInput) {\n      logbook.unshift({\n        id: logbook.length + 1,\n        date: '',\n        entry: this.state.logbookInput,\n        supervisorApproval: false\n      })\n    }\n\n    this.setState({\n      logbook: logbook,\n      logbookInput: ''\n    });\n  }\n\n  removeLog(item) {\n    let logbook = this.state.logbook;\n\n    logbook = logbook.filter((lb) => lb.id !== item.id);\n\n    this.setState({ logbook });\n  }\n\n\n  //renders the components to screen\n  render() { //renders components to the screen\n    const statusbar = (Platform.OS === 'ios') ? <View styles={styles.statusbar}></View> : <View></View>;\n\n    //{statusbar} makes a status bar based on if the platform is ios else it doesn't\n    //<Header> pulls the Header component from the header file and renders it\n    //<InputBar> Renders the inputbar component\n    return (\n\n      <NavigationContainer>\n        <Stack.Navigator>\n        <Stack.Screen options = {{headerShown: false }} name=\"Login\" component={LoginScreen} />\n        <Stack.Screen options = {{headerShown: false }} name=\"Home\" component={HomeScreen} />\n          \n        </Stack.Navigator>\n      </NavigationContainer>\n\n      // <View style={styles.container}>\n      //   {statusbar}\n\n      //   <Header title=\"Logbook\" />\n\n      //   <InputBar\n      //     addNewLog={() => this.addNewLog()}\n      //     textChange={logbookInput => this.setState({ logbookInput })}\n      //     logbookInput={this.state.logbookInput}\n      //   />\n\n      //   <FlatList\n      //     data={this.state.logbook}\n      //     extraData={this.state}\n      //     keyExtractor={(item, index) => index.toString()}\n      //     renderItem={({ item, index }) => {\n      //       return (\n      //         <LogItem logItem={item} removeLog={() => this.removeLog(item)} />\n      //       )\n      //     }}\n      //   />\n\n      // </View>\n\n    );\n  }\n}\n\n\n//Stylesheet specifications\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#342F4E',\n  },\n  statusbar: {\n    backgroundColor: '#ffce00',\n    height: 20\n  }\n});\n"],"sourceRoot":""}