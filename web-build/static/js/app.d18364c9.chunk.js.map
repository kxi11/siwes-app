{"version":3,"sources":["components/header.js","components/inputbar.js","components/logitem.js","firebase.js","screens/LoginScreen.js","screens/HomeScreen.js","screens/ProfileScreen.js","screens/RegisterScreen.js","App.js"],"names":["styles","StyleSheet","create","header","height","alignItems","justifyContent","title","color","fontSize","fontWeight","textTransform","Header","props","View","style","Text","inputContainer","flexDirection","shadowOffset","width","shadowColor","shadowOpacity","input","backgroundColor","flex","addButton","addButtonText","logItem","this","TouchableOpacity","supervisorApproval","entry","Button","onPress","removeLog","React","Component","borderBottomColor","borderBottomWidth","paddingLeft","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","LoginScreen","useState","email","setEmail","password","setPassword","navigation","useNavigation","collection","KeyboardAvoidingView","container","behavior","Image","source","uri","TextInput","placeholder","value","onChangeText","text","secureTextEntry","buttonContainer","signInWithEmailAndPassword","then","userCredentials","user","console","log","catch","error","alert","message","currentUser","replace","button","createUserWithEmailAndPassword","className","paddingHorizontal","paddingVertical","borderRadius","marginTop","buttonText","buttonOutline","borderColor","borderWidth","buttonOutlineText","HomeScreen","logs","setLogs","userId","uid","activity","Day","locations","Week","form","setForm","popupActive","setPopupActive","logsCollectionRef","useEffect","onSnapshot","snapshot","docs","map","doc","id","viewing","data","handleSubmit","e","preventDefault","addDoc","Navbar","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","onClick","signOut","Form","onSubmit","Group","Label","Control","onChange","target","activities","i","activityClone","handleActivity","location","locationClone","handleLocation","CardGroup","filter","Card","Title","dangerouslySetInnerHTML","__html","Body","ButtonGroup","logsClone","forEach","handleView","deleteDoc","ProfileScreen","imageList","setImageList","imageListRef","ref","profile","setProfile","profileCollectionRef","listAll","response","items","item","name","getDownloadURL","url","prev","Container","Img","src","pro","fullName","year","faculty","level","companyName","city","state","yearEstablished","employeeNumber","estatishmentType","businessType","nameContactPerson","positionContactPerson","phoneContactPerson","emailContactPerson","RegisterScreen","selectedImage","setSelectedImage","companyAddress","establishmentType","htmlFor","files","imageRef","uploadBytes","Check","Stack","createNativeStackNavigator","App","Platform","OS","statusbar","NavigationContainer","Navigator","Screen","options","headerShown","component"],"mappings":"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","file":"static/js/app.d18364c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\n//Header function that will be rendered in App.js\r\nconst Header = (props) => {\r\n    return (\r\n        <View style={styles.header}>\r\n            <Text style={styles.title}>{props.title}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\n//Stylesheet specifications\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        height: 60,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n    title: {\r\n        color: 'grey',\r\n        fontSize: 28,\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase'\r\n\r\n    }\r\n\r\n});\r\n\r\n//exports the Header fuction to App.js\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\nimport { inOut } from 'react-native/Libraries/Animated/Easing';\r\n\r\n//input bar function that will be rendered in App.js\r\nconst InputBar = props => {\r\n    return (\r\n        <View style={StyleSheet.inputContainer}>\r\n            <TextInput style={StyleSheet.input} onChangeText={logBookInput => props.textChange(logBookInput)} value={props.logBookInput} />\r\n            <TouchableOpacity style={styles.addButton} onPress={props.addNewLog}><Text style={styles.addButtonText}>ADD</Text></TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\n//Stylesheet specifications\r\nconst styles = StyleSheet.create({\r\n    inputContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        shadowOffset: { width: 0, height: 3 },\r\n        shadowColor: '#171717',\r\n        shadowOpacity: .1\r\n    },\r\n    input: {\r\n        backgroundColor: '#f3f3f3',\r\n        flex: 1,\r\n        fontSize: 18,\r\n        height: 35\r\n    },\r\n    addButton: {\r\n        width: 100,\r\n        backgroundColor: '#ffce00',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    addButtonText: {\r\n        color: '#171717',\r\n        fontSize: 18,\r\n        fontWeight: '700'\r\n    }\r\n})\r\n\r\n//exports the InputBar fuction\r\nexport default InputBar;\r\n\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, Button, TouchableOpacity } from \"react-native-web\";\r\n\r\nexport default class LogItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const logItem = this.props.logItem;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                style={styles.logItem}\r\n            >\r\n                <Text style={(logItem.supervisorApproval) ? { color: '#AAAAAA' } : { color: '#313131' }}>\r\n                    {logItem.entry}\r\n                </Text>\r\n\r\n                <Button\r\n                    title=\"Remove\"\r\n                    color={(logItem.supervisorApproval) ? 'rgba(200, 0, 0, 0.5)' : 'rgba(200, 0, 0, 1)'}\r\n                    onPress={() => this.props.removeLog()}\r\n                />\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    logItem: {\r\n        width: '100%',\r\n        height: 40,\r\n        borderBottomColor: '#DDD',\r\n        borderBottomWidth: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingLeft: 15\r\n    }\r\n})","// Import the functions you need from the SDKs you need\r\n// import firebase from \"firebase\";\r\nimport { initializeApp } from \"firebase/app\"\r\nimport { getAuth } from \"firebase/auth\"\r\nimport { getFirestore } from \"firebase/firestore\"\r\nimport { getStorage } from \"firebase/storage\"\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCLR8XlGiAJAMIxCEKh144Uso849fUv1uk\",\r\n  authDomain: \"siwesapp-99c10.firebaseapp.com\",\r\n  projectId: \"siwesapp-99c10\",\r\n  storageBucket: \"siwesapp-99c10.appspot.com\",\r\n  messagingSenderId: \"854600264735\",\r\n  appId: \"1:854600264735:web:81e96d486daee00e7b392a\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig)\r\nconst auth = getAuth(app)\r\nconst db = getFirestore(app)\r\nconst storage = getStorage(app)\r\n\r\nexport { storage, auth, db }","import { useNavigation } from '@react-navigation/native'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth'\r\nimport { StyleSheet, Text, View, KeyboardAvoidingView, TextInput, TouchableOpacity, Image } from 'react-native'\r\nimport { collection } from 'firebase/firestore'\r\nimport { auth, db } from '../firebase'\r\nimport Header from '../components/header';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const ref = collection(db, \"profiles\");\r\n\r\n  // useEffect(() => {\r\n  //   const unsubscribe = auth.onAuthStateChanged(user => {\r\n  //     if (user) {\r\n  //       navigation.replace(\"Register\")\r\n  //     }\r\n  //   })\r\n\r\n  //   return unsubscribe\r\n  // }, [])\r\n\r\n  const handleSignUp = () => {\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.log('Registered in with: ', user.email);\r\n      })\r\n      .catch(error => alert(error.message))\r\n    if (auth.currentUser) {\r\n      navigation.replace(\"Register\")\r\n    }\r\n  }\r\n\r\n  const handleLogin = () => {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.log('Logged in with: ', user.email);\r\n      })\r\n      .catch(error => alert(error.message))\r\n\r\n    if (auth.currentUser) {\r\n      navigation.replace(\"Home\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      behavior=\"padding\">\r\n\r\n      <View>\r\n        <Image\r\n          style={{ width: 250, height: 250 }}\r\n          source={{ uri: 'https://yt3.ggpht.com/a/AGF-l79SeAEqp4CvG_EAONZnGRfG0eK_W_Iopwgb1Q=s900-c-k-c0xffffffff-no-rj-mo' }}\r\n        />\r\n      </View>\r\n      <Header title='DIGITAL LOGBOOK' />\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChangeText={text => setEmail(text)}\r\n          style={styles.input} />\r\n        <TextInput\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChangeText={text => setPassword(text)}\r\n          style={styles.input}\r\n          secureTextEntry />\r\n      </View>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity onPress={handleLogin} style={styles.button}>\r\n          <Button>\r\n            Login\r\n          </Button>\r\n        </TouchableOpacity>\r\n        {!password ? (\r\n          <View>\r\n          </View>\r\n        ) : (\r\n          <TouchableOpacity onPress={handleSignUp}>\r\n            <Button className='mt-3'>\r\n              Register\r\n            </Button>\r\n          </TouchableOpacity>\r\n        )}\r\n\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  inputContainer: {\r\n    width: '80%',\r\n  },\r\n  input: {\r\n    backgroundColor: 'white',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 10,\r\n    borderRadius: 10,\r\n    marginTop: 5,\r\n  },\r\n  buttonContainer: {\r\n    width: '60%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 40,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n  },\r\n  buttonOutline: {\r\n    backgroundColor: 'white',\r\n    marginTop: 5,\r\n    borderColor: '#0782F9',\r\n    borderWidth: 2,\r\n\r\n  },\r\n  buttonOutlineText: {\r\n    color: '#0782F9',\r\n    fontWeight: '700',\r\n    fontSize: 16,\r\n  },\r\n})","import { StyleSheet, Text, View, TouchableOpacity, TextInput } from 'react-native'\r\nimport React from 'react'\r\nimport { auth, db } from '../firebase'\r\nimport { useState, useEffect } from 'react'\r\nimport { NavigationContainer, useNavigation } from '@react-navigation/native'\r\nimport { collection, onSnapshot, doc, addDoc, deleteDoc } from \"firebase/firestore\"\r\nimport Header from '../components/header'\r\nimport { Button, ButtonGroup, Card, CardGroup, Container, Form } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal } from 'bootstrap'\r\nimport { Navbar } from 'react-bootstrap'\r\n\r\n\r\nconst HomeScreen = () => {\r\n\r\n    const navigation = useNavigation()\r\n\r\n    const handleSignOut = () => {\r\n        auth\r\n            .signOut()\r\n            .then(() => {\r\n                navigation.replace(\"Login\")\r\n            })\r\n            .catch(error => alert(error.message))\r\n    }\r\n\r\n    const [logs, setLogs] = useState([])\r\n    const [form, setForm] = useState({\r\n        userId: auth.currentUser.uid,\r\n        activity: [\"\"],\r\n        Day: \"\",\r\n        locations: [\"\"],\r\n        Week: \"\"\r\n\r\n    })\r\n\r\n    const [popupActive, setPopupActive] = useState(false)\r\n\r\n    const logsCollectionRef = collection(db, \"logs\")\r\n\r\n    useEffect(() => {\r\n        onSnapshot(logsCollectionRef, snapshot => {\r\n            setLogs(snapshot.docs.map(doc => {\r\n                return {\r\n                    id: doc.id,\r\n                    viewing: false,\r\n                    ...doc.data()\r\n                }\r\n            }))\r\n        })\r\n    }, [])\r\n\r\n    const handleView = id => {\r\n        const logsClone = [...logs]\r\n\r\n        logsClone.forEach(log => {\r\n            if (log.id === id) {\r\n                log.viewing = !log.viewing\r\n            } else {\r\n                log.viewing = false\r\n            }\r\n        })\r\n\r\n        setLogs(logsClone)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (\r\n            !form.Week || !form.Day || !form.activity || !form.locations\r\n        ) {\r\n            alert(\"Please fill out all fields\")\r\n            return\r\n        }\r\n\r\n        addDoc(logsCollectionRef, form)\r\n\r\n        setForm({\r\n            userId: auth.currentUser.uid,\r\n            activity: [\"\"],\r\n            Day: \"\",\r\n            locations: [\"\"],\r\n            Week: \"\"\r\n        })\r\n    }\r\n\r\n    const handleActivity = (e, i) => {\r\n        const activityClone = [...form.activity]\r\n\r\n        activityClone[i] = e.target.value\r\n\r\n        setForm({\r\n            ...form,\r\n            activity: activityClone\r\n        })\r\n    }\r\n\r\n    const handleLocation = (e, i) => {\r\n        const locationClone = [...form.locations]\r\n\r\n        locationClone[i] = e.target.value\r\n\r\n        setForm({\r\n            ...form,\r\n            locations: locationClone\r\n        })\r\n    }\r\n\r\n    const handleActivityCount = () => {\r\n        setForm({\r\n            ...form,\r\n            activity: [...form.activity, \"\"]\r\n        })\r\n    }\r\n\r\n    const handleLocationCount = () => {\r\n        setForm({\r\n            ...form,\r\n            locations: [...form.locations, \"\"]\r\n        })\r\n    }\r\n\r\n    const removeLog = id => {\r\n        deleteDoc(doc(db, \"logs\", id))\r\n    }\r\n\r\n    const handleLog = () => {\r\n        if (logs.userId === auth.currentUser.uid) {\r\n\r\n        }\r\n    }\r\n\r\n    const handleProfile = () => {\r\n        navigation.replace(\"Profile\")\r\n    }\r\n\r\n    return (\r\n\r\n        <View className='App'>\r\n\r\n            <View>\r\n                <Navbar className='navbar navbar-expand-lg navbar-light bg-dark mb-3'>\r\n                    <div className='container-fluid'>\r\n                        <Header title=\"My Logs\" />\r\n                        <Button className=\"btn-dark\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                            Profile\r\n                        </Button>\r\n                    </div>\r\n                </Navbar>\r\n                <div className='container-fluid d-grid justify-content-center'>\r\n                    <div className=\"collapse\" id=\"collapseExample\">\r\n                        <Navbar.Text className=\"container-fluid\">\r\n                            {/* <Text>Signed in as {auth.currentUser?.email}</Text> */}\r\n                            <Button className='m-3' onClick={handleProfile}>\r\n                                <Text>\r\n                                    Detailed Profile\r\n                                </Text>\r\n                            </Button>\r\n                            <Button className='m-3 btn-danger' onClick={handleSignOut}>\r\n                                <Text>\r\n                                    Sign out\r\n                                </Text>\r\n                            </Button>\r\n                        </Navbar.Text>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <Button className='m-3 d-grid gap-2 col-6 mx-auto btn-lg' data-bs-toggle=\"collapse\" data-bs-target=\"#modalExample\" aria-expanded=\"false\" aria-controls=\"modalExample\" onClick={() => setPopupActive(!popupActive)} title=\"Add Log\"><Text>Add Log</Text></Button>\r\n\r\n                {popupActive && <View className='collapse fade' id='modalExample'>\r\n                    <div className='container-fluid'>\r\n                        <View className='popup-inner'>\r\n                            <div className='modal-title'><Text className=''>Add a new log</Text></div>\r\n\r\n                            <Form className='container-fluid mb-3' onSubmit={handleSubmit}>\r\n\r\n                                <Form.Group>\r\n                                    <Form.Label>Week</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder='Ex. Week 1, Week 2...' value={form.Week} onChange={e => setForm({ ...form, Week: e.target.value })} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Form.Label>Day</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder='Ex. Monday Jan. 1 2020' value={form.Day} onChange={e => setForm({ ...form, Day: e.target.value })} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Form.Label className='mt-3'>Activity</Form.Label>\r\n                                    {\r\n                                        form.activity.map((activities, i) => (\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder='What did you do today?'\r\n                                                key={i}\r\n                                                value={activities}\r\n                                                onChange={e => handleActivity(e, i)} />\r\n                                        ))\r\n                                    }\r\n                                    <Button className='mt-2' type='button' onClick={handleActivityCount} title=\"Add Activity\"><Text>Add Activity</Text></Button>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Form.Label className='mt-2'>Location</Form.Label>\r\n                                    {\r\n                                        form.locations.map((location, i) => (\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder='Where did you work today?'\r\n                                                key={i}\r\n                                                value={location}\r\n                                                onChange={e => handleLocation(e, i)} />\r\n                                        ))\r\n                                    }\r\n                                    <Button className='mt-2' type='button' onClick={handleLocationCount} title=\"Add Location\"><Text>Add Location</Text></Button>\r\n                                </Form.Group>\r\n\r\n                                <div className='btn-group-vertical container-fluid mt-3 d-grid justify-content-center'>\r\n                                    <Button className='btn-primary' type='submit' onClick={handleSubmit} title=\"Submit\">\r\n                                        <Text>Submit</Text>\r\n                                    </Button>\r\n                                    <Button className='btn-danger remove' type='button' onClick={() => setPopupActive(false)} title=\"Close\">\r\n                                        <Text>Close</Text>\r\n                                    </Button>\r\n                                </div>\r\n\r\n\r\n                            </Form>\r\n                        </View>\r\n\r\n                    </div>\r\n\r\n                </View>}\r\n\r\n                <div className='container-fluid'>\r\n                    <CardGroup className=\"row row-cols-2 m-3 p-3\">\r\n\r\n                        {logs.filter((log) => {\r\n                            if (log.userId === auth.currentUser.uid) {\r\n                                return log;\r\n                            }\r\n                        })\r\n                            .map((log, i) => (\r\n                                <Card className=\"col\" key={log.id}>\r\n                                    <Card.Title className='mt-3'>{log.Week}</Card.Title>\r\n\r\n                                    <Card.Text dangerouslySetInnerHTML={{ __html: log.Day }}></Card.Text>\r\n                                    {log.viewing && <Card.Body>\r\n                                        <Card.Text className='h6'>Activities</Card.Text>\r\n                                        <Card.Text>\r\n                                            {log.activity.map((activities, i) => (\r\n                                                <Card.Text key={i}>{activities}</Card.Text>\r\n                                            ))}\r\n                                        </Card.Text>\r\n                                        <Card.Text className='h6'>Locations</Card.Text>\r\n                                        <Card.Text>\r\n                                            {log.locations.map((location, i) => (\r\n                                                <Text key={i}>{location}</Text>\r\n                                            ))}\r\n                                        </Card.Text>\r\n                                    </Card.Body>}\r\n\r\n                                    <ButtonGroup className='btn-group-vertical'>\r\n                                        <Button className='d-grid gap-2 col-6 mx-auto' onClick={() => handleView(log.id)} title=\"View\"><Text>View {log.viewing ? 'less' : 'more'}</Text></Button>\r\n                                        <Button className='remove d-grid gap-2 col-6 mx-auto btn-danger mb-4' onClick={() => removeLog(log.id)} title=\"Delete\"><Text>Delete</Text></Button>\r\n                                    </ButtonGroup>\r\n\r\n                                </Card>\r\n                            ))}\r\n                    </CardGroup>\r\n\r\n                </div >\r\n\r\n            </View>\r\n\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nexport default HomeScreen","import { StyleSheet, Text, View } from 'react-native'\r\nimport React from 'react'\r\nimport { storage, auth } from '../firebase'\r\nimport { useState, useEffect } from 'react'\r\nimport { NavigationContainer, useNavigation } from '@react-navigation/native'\r\nimport { useFirestoreQuery, useFirestoreQueryData } from \"@react-query-firebase/firestore\";\r\nimport {\r\n  query,\r\n  collection,\r\n  limit,\r\n  QuerySnapshot,\r\n  DocumentData,\r\n  onSnapshot,\r\n  doc,\r\n  DocumentSnapshot,\r\n} from \"firebase/firestore\";\r\nimport { db } from '../firebase'\r\nimport { list, listAll, ref, getDownloadURL } from 'firebase/storage'\r\nimport { Button, ButtonGroup, Card, CardGroup, Container, Form } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst ProfileScreen = () => {\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const [imageList, setImageList] = useState([])\r\n  const imageListRef = ref(storage, \"images/\")\r\n  const [profile, setProfile] = useState([])\r\n\r\n  const profileCollectionRef = collection(db, \"profiles\")\r\n\r\n  useEffect(() => {\r\n    onSnapshot(profileCollectionRef, snapshot => {\r\n      setProfile(snapshot.docs.map(doc => {\r\n        return {\r\n          id: doc.id,\r\n          viewing: false,\r\n          ...doc.data()\r\n        }\r\n      }))\r\n    })\r\n  }, []);\r\n\r\n  const handleSignOut = () => {\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        navigation.replace(\"Login\")\r\n      })\r\n      .catch(error => alert(error.message))\r\n  }\r\n\r\n  const replaceHome = () => {\r\n    navigation.replace(\"Home\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    listAll(imageListRef).then((response) => {\r\n      response.items.filter((item) => {\r\n        if (item.name === auth.currentUser.uid) {\r\n          return item;\r\n        }\r\n      }).forEach((item) => {\r\n        getDownloadURL(item).then((url) => {\r\n          setImageList((prev) => [...prev, url])\r\n        })\r\n      })\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <Container className='container-fluid'>\r\n      { \r\n        imageList\r\n          .map((url) => {\r\n            return <Card.Img className='border border-dark mb-3' style={{height: 200, width: 200}} key={url.id} src={url} />\r\n          })\r\n      }\r\n      {\r\n        profile.filter((pro) => {\r\n          if (pro.userId === auth.currentUser.uid) {\r\n            return pro;\r\n          }\r\n        }).map((pro, i) => (\r\n          <Card className=\"container-fluid\" key={pro.id}>\r\n            <Card.Title >{pro.fullName}</Card.Title>\r\n            <Card.Text>Signed in as {auth.currentUser?.email}</Card.Text>\r\n            <Card.Text>Year: {pro.year}</Card.Text>\r\n            <Card.Text>Faculty: {pro.faculty}</Card.Text>\r\n            <Card.Text>Level: {pro.level}</Card.Text>\r\n            <Card.Text>Company Name: {pro.companyName}</Card.Text>\r\n            <Card.Text>City: {pro.city}</Card.Text>\r\n            <Card.Text>State: {pro.state}</Card.Text>\r\n            <Card.Text>Year Company Established: {pro.yearEstablished}</Card.Text>\r\n            <Card.Text>Number of Employees: {pro.employeeNumber}</Card.Text>\r\n            <Card.Text>Type of Establishment: {pro.estatishmentType}</Card.Text>\r\n            <Card.Text>Type of Business: {pro.businessType}</Card.Text>\r\n            <Card.Text>Contact Person's Name: {pro.nameContactPerson}</Card.Text>\r\n            <Card.Text>Contact Person's Position: {pro.positionContactPerson}</Card.Text>\r\n            <Card.Text>Contact Person's Phone Number: {pro.phoneContactPerson}</Card.Text>\r\n            <Card.Text>Contact Person's Email: {pro.emailContactPerson}</Card.Text>\r\n\r\n          </Card>\r\n\r\n\r\n\r\n        ))\r\n      }\r\n      <Button className='m-3 btn-danger' onClick={handleSignOut}>\r\n        <Text>\r\n          Sign out\r\n        </Text>\r\n      </Button>\r\n      <Button className='m-3' onClick={replaceHome}>\r\n        <Text>\r\n          Back\r\n        </Text>\r\n      </Button>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import { useNavigation } from '@react-navigation/native'\r\nimport { StyleSheet, Text, View, Image } from 'react-native'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from '../components/header';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { TextInput, TouchableOpacity } from 'react-native-web';\r\nimport { collection, addDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth, storage } from '../firebase';\r\nimport { ref, uploadBytes } from \"firebase/storage\"\r\n\r\nconst RegisterScreen = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [selectedImage, setSelectedImage] = React.useState('');\r\n\r\n    const [form, setForm] = React.useState({\r\n        userId: auth.currentUser.uid,\r\n        fullName: \"\",\r\n        year: \"\",\r\n        faculty: \"\",\r\n        level: \"\",\r\n        companyName: \"\",\r\n        companyAddress: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        yearEstablished: \"\",\r\n        employeeNumber: \"\",\r\n        establishmentType: \"\",\r\n        businessType: \"\",\r\n        nameContactPerson: \"\",\r\n        positionContactPerson: \"\",\r\n        phoneContactPerson: \"\",\r\n        emailContactPerson: \"\",\r\n    })\r\n\r\n\r\n    const navigation = useNavigation()\r\n\r\n\r\n    const profileCollectionRef = collection(db, \"profiles\")\r\n\r\n    const handleChange = e => {\r\n        if (e.target.files[0]) {\r\n            setSelectedImage(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const handleUpload = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if (selectedImage == null) return;\r\n        const imageRef = ref(storage, `images/${auth.currentUser.uid}`);\r\n        uploadBytes(imageRef, selectedImage).then(() => {\r\n            alert(\"Image Uploaded!\")\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (\r\n            !selectedImage ||\r\n            !form.fullName ||\r\n            !form.year ||\r\n            !form.faculty ||\r\n            !form.level ||\r\n            !form.companyName ||\r\n            !form.companyAddress ||\r\n            !form.city ||\r\n            !form.state ||\r\n            !form.yearEstablished ||\r\n            !form.employeeNumber ||\r\n            !form.establishmentType ||\r\n            !form.businessType ||\r\n            !form.nameContactPerson ||\r\n            !form.positionContactPerson ||\r\n            !form.phoneContactPerson ||\r\n            !form.emailContactPerson\r\n        ) {\r\n            alert(\"Please fill out all fields\")\r\n            return\r\n        }\r\n\r\n        addDoc(profileCollectionRef, form)\r\n\r\n        setForm({\r\n            userId: auth.currentUser.uid,\r\n            fullName: \"\",\r\n            year: \"\",\r\n            faculty: \"\",\r\n            level: \"\",\r\n            companyName: \"\",\r\n            companyAddress: \"\",\r\n            city: \"\",\r\n            state: \"\",\r\n            yearEstablished: \"\",\r\n            employeeNumber: \"\",\r\n            establishmentType: \"\",\r\n            businessType: \"\",\r\n            nameContactPerson: \"\",\r\n            positionContactPerson: \"\",\r\n            phoneContactPerson: \"\",\r\n            emailContactPerson: \"\"\r\n        })\r\n\r\n        navigation.replace(\"Home\")\r\n    }\r\n\r\n\r\n    return (\r\n        <View className=\"container-fluid\">\r\n            <Header title=\"Student Particulars Form\" />\r\n\r\n            <Form className='m-3 p-3' onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label>PASSPORT PHOTO</Form.Label>\r\n                    <Form.Label htmlFor='upload-button' className='m-3'>\r\n                    </Form.Label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"upload-button\"\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Button type='button' onClick={handleUpload}>\r\n                        <Text>\r\n                            Upload Photo\r\n                        </Text>\r\n                    </Button>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>FULL NAME</Form.Label>\r\n                    <Form.Control type=\"text\" value={form.fullName} onChange={e => setForm({ ...form, fullName: e.target.value })} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label >SIWES YEAR</Form.Label>\r\n                    <Form.Check>\r\n                        <input className=\"form-check-input\" type=\"radio\" name='years' id=\"2021Input\" value={\"2021\"} onChange={e => setForm({ ...form, year: e.target.value })} />\r\n                        <Form.Label className=\"form-check-label\" htmlFor=\"2021Input\">2021</Form.Label>\r\n                    </Form.Check>\r\n                    <Form.Check>\r\n                        <input className=\"form-check-input\" type=\"radio\" name='years' id=\"2022Input\" value={\"2022\"} onChange={e => setForm({ ...form, year: e.target.value })} />\r\n                        <Form.Label className=\"form-check-label\" htmlFor=\"2022Input\">2022</Form.Label>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>FACULTY OF NATURAL AND APPLIED SCIENCE</Form.Label>\r\n                    <Form.Check>\r\n                        <input className=\"form-check-input\" type=\"radio\" name='departments' id=\"Biochemistry\" value={\"biochemistry\"} onChange={e => setForm({ ...form, faculty: e.target.value })} />\r\n                        <Form.Label className=\"form-check-label\" htmlFor=\"biochemistry\">BIOCHEMISTRY</Form.Label>\r\n                    </Form.Check>\r\n                    <Form.Check>\r\n                        <input className=\"form-check-input\" type=\"radio\" name='departments' id=\"Software Engineering\" value={\"softwareEngineering\"} onChange={e => setForm({ ...form, faculty: e.target.value })} />\r\n                        <Form.Label className=\"form-check-label\" htmlFor=\"softwareEngineering\">SOFTWARE ENGINEERING</Form.Label>\r\n                    </Form.Check>\r\n                    <Form.Check>\r\n                        <input className=\"form-check-input\" type=\"radio\" name='departments' id=\"Biotechnology\" value={\"biotechnology\"} onChange={e => setForm({ ...form, faculty: e.target.value })} />\r\n                        <Form.Label className=\"form-check-label\" htmlFor=\"biotechnology\">BIOTECHNOLOGY</Form.Label>\r\n                    </Form.Check>\r\n                    <Form.Check>\r\n                        <input className=\"form-check-input\" type=\"radio\" name='departments' id=\"Information Technologies\" value={\"informationTechnologies\"} onChange={e => setForm({ ...form, faculty: e.target.value })} />\r\n                        <Form.Label className=\"form-check-label\" htmlFor=\"informationTechnologies\">INFORMATION TECHNOLOGIES</Form.Label>\r\n                    </Form.Check>\r\n                    <Form.Check>\r\n                        <input className=\"form-check-input\" type=\"radio\" name='departments' id=\"Microbiology\" value={\"microbiology\"} onChange={e => setForm({ ...form, faculty: e.target.value })} />\r\n                        <Form.Label className=\"form-check-label\" htmlFor=\"microbiology\">MICROBIOLOGY</Form.Label>\r\n                    </Form.Check>\r\n                    <Form.Check>\r\n                        <input className=\"form-check-input\" type=\"radio\" name='departments' id=\"Computer Science\" value={\"computerScience\"} onChange={e => setForm({ ...form, faculty: e.target.value })} />\r\n                        <Form.Label className=\"form-check-label\" htmlFor=\"computerScience\">COMPUTER SCIENCE</Form.Label>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>LEVEL</Form.Label>\r\n                    <Form.Check>\r\n                        <input className=\"form-check-input\" type=\"radio\" name='levels' id=\"200level\" value={\"200 level\"} onChange={e => setForm({ ...form, level: e.target.value })} />\r\n                        <Form.Label className=\"form-check-label\" htmlFor=\"200level\">200</Form.Label>\r\n                    </Form.Check>\r\n                    <Form.Check>\r\n                        <input className=\"form-check-input\" type=\"radio\" name='levels' id=\"300level\" value={\"300 level\"} onChange={e => setForm({ ...form, level: e.target.value })} />\r\n                        <Form.Label className=\"form-check-label\" htmlFor=\"300level\">300</Form.Label>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>COMPANY INFORMATION</Form.Label>\r\n                    <Form.Group className='border rounded border-dark p-3'>\r\n                        <Form.Label>Name of the Company</Form.Label>\r\n                        <Form.Control type=\"text\" value={form.companyName} onChange={e => setForm({ ...form, companyName: e.target.value })} />\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control type=\"text\" value={form.companyAddress} onChange={e => setForm({ ...form, companyAddress: e.target.value })} />\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type=\"text\" value={form.city} onChange={e => setForm({ ...form, city: e.target.value })} />\r\n                        <Form.Label>State</Form.Label>\r\n                        <Form.Control type=\"text\" value={form.state} onChange={e => setForm({ ...form, state: e.target.value })} />\r\n                        <Form.Label>Year Established</Form.Label>\r\n                        <Form.Control type=\"text\" value={form.yearEstablished} onChange={e => setForm({ ...form, yearEstablished: e.target.value })} />\r\n                        <Form.Label>Number of Employees</Form.Label>\r\n                        <Form.Control type=\"text\" value={form.employeeNumber} onChange={e => setForm({ ...form, employeeNumber: e.target.value })} />\r\n                        <Form.Label>Type of Established</Form.Label>\r\n                        <Form.Check>\r\n                            <input className=\"form-check-input\" type=\"radio\" name='levels' id=\"government\" value={\"Government\"} onChange={e => setForm({ ...form, establishmentType: e.target.value })} />\r\n                            <Form.Label className=\"form-check-label\" htmlFor=\"government\">Government Enterprise</Form.Label>\r\n                        </Form.Check>\r\n                        <Form.Check>\r\n                            <input className=\"form-check-input\" type=\"radio\" name='levels' id=\"private\" value={\"Private\"} onChange={e => setForm({ ...form, establishmentType: e.target.value })} />\r\n                            <Form.Label className=\"form-check-label\" htmlFor=\"private\">Private Company</Form.Label>\r\n                        </Form.Check>\r\n                        <Form.Check>\r\n                            <Form.Label className=\"form-check-label\" htmlFor=\"other\">Other - Please specify</Form.Label>\r\n                            <Form.Control type=\"text\" value={form.establishmentType} onChange={e => setForm({ ...form, establishmentType: e.target.value })} />\r\n                        </Form.Check>\r\n                        <Form.Label>Type of Business</Form.Label>\r\n                        <Form.Control type=\"text\" value={form.businessType} onChange={e => setForm({ ...form, businessType: e.target.value })} />\r\n                        <Form.Label>Contact Person's Name</Form.Label>\r\n                        <Form.Control type=\"text\" value={form.nameContactPerson} onChange={e => setForm({ ...form, nameContactPerson: e.target.value })} />\r\n                        <Form.Label>Contact's position in company</Form.Label>\r\n                        <Form.Control type=\"text\" value={form.positionContactPerson} onChange={e => setForm({ ...form, positionContactPerson: e.target.value })} />\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"text\" value={form.phoneContactPerson} onChange={e => setForm({ ...form, phoneContactPerson: e.target.value })} />\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" value={form.emailContactPerson} onChange={e => setForm({ ...form, emailContactPerson: e.target.value })} />\r\n                    </Form.Group>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>STUDENT'S WORKING SCOPE DURING INDUSTRIAL TRAINING</Form.Label>\r\n                    <Form.Control type='textarea' />\r\n                    {/* <Form.Label>Company's organization chart</Form.Label> */}\r\n                    <Form.Label className='mt-3'>Principal activity of company - Describe the relavance to your academic program/department</Form.Label>\r\n                    <Form.Control type='textarea' />\r\n                    <Form.Label>Description of department/unit attached with</Form.Label>\r\n                    <br></br>\r\n                    <Form.Control type='textarea' />\r\n                    <Form.Label>DETAILS OF INDUSTRY BASED SUPERVISOR</Form.Label>\r\n                    <Form.Label>Full Name</Form.Label>\r\n                    <Form.Control type='text' />\r\n                    <Form.Label>Occupation</Form.Label>\r\n                    <Form.Control type='text' />\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type='email' />\r\n                    <Form.Label>Phone</Form.Label>\r\n                    <Form.Control type='text' />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Button className='m-3' type='submit' onClick={handleSubmit}><Text>Submit</Text></Button>\r\n                </Form.Group>\r\n            </Form>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n    },\r\n    inputContainer: {\r\n        width: '80%',\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 10,\r\n        borderRadius: 10,\r\n        marginTop: 5,\r\n    },\r\n    buttonContainer: {\r\n        width: '60%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 40,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n    buttonOutline: {\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        borderColor: '#0782F9',\r\n        borderWidth: 2,\r\n\r\n    },\r\n    buttonOutlineText: {\r\n        color: '#0782F9',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n})","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Platform, StyleSheet, Text, View, FlatList, Image} from 'react-native';\nimport Header from './components/header';\nimport InputBar from './components/inputbar';\nimport LogItem from './components/logitem';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from './screens/LoginScreen'\nimport HomeScreen from './screens/HomeScreen'\nimport ProfileScreen from './screens/ProfileScreen';\nimport RegisterScreen from './screens/RegisterScreen';\n\nconst Stack = createNativeStackNavigator();\n\n//creates the App class\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n         \n    }\n  }\n\n  //renders the components to screen\n  render() { //renders components to the screen\n    const statusbar = (Platform.OS === 'ios') ? <View styles={styles.statusbar}></View> : <View></View>;\n\n    //{statusbar} makes a status bar based on if the platform is ios else it doesn't\n    //<Header> pulls the Header component from the header file and renders it\n    //<InputBar> Renders the inputbar component\n    return (\n\n      <NavigationContainer>\n        <Stack.Navigator>\n        <Stack.Screen options = {{headerShown: false }} name=\"Login\" component={LoginScreen} />\n        <Stack.Screen options = {{headerShown: false }} name=\"Home\" component={HomeScreen} />\n        <Stack.Screen options = {{headerShown: false }} name=\"Register\" component={RegisterScreen} />\n        <Stack.Screen options = {{headerShown: false }} name=\"Profile\" component={ProfileScreen} />\n          \n        </Stack.Navigator>\n      </NavigationContainer>\n\n    );\n  }\n}\n\n\n//Stylesheet specifications\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#342F4E',\n  },\n  statusbar: {\n    backgroundColor: '#ffce00',\n    height: 20\n  }\n});\n"],"sourceRoot":""}